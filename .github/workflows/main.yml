# name of your github action
name: BuildAndRelease
on:
  push:
    tags: 
      - v*

jobs:
  build_on_linux:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
      with:
        ref: test-actions
    - uses: actions/setup-node@master
      with:
        node-version: 10.16
    - name: Install quasar CLI
      run: npm install -g @quasar/cli
    - name: Install dependencies
      run: npm install
    # - name: check env
    #   env:
    #     ELECTRON: true
    #     APP_VERSION_NUMBER: 0.5.9
    #   run: set
    - name: Build on all platform
      # env:
      #   ELECTRON: true
      #   APP_VERSION_NUMBER: 0.5.9
      run: quasar build -m electron --target all --bundler builder
    - name: Zip Windows release
      run: cd ./dist/electron/Packaged/win-unpacked && zip -r ../../../../RandomFilePicker.zip ./*
    - name: see directory
      run: ls ./dist/electron/Packaged
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1.0.0
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false
    - name: Upload Release Linux Asset
      id: upload-release-linux-asset
      uses: actions/upload-release-asset@v1.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: ./dist/electron/Packaged/RandomFilePicker-0.0.1.AppImage
        asset_name: RandomFilePicker-linux.AppImage
        asset_content_type: application/x-executable
    - name: Upload Release Windows Asset
      id: upload-release-windows-asset
      uses: actions/upload-release-asset@v1.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: ./RandomFilePicker.zip
        asset_name: RandomFilePicker-windows.zip  
        asset_content_type: application/zip